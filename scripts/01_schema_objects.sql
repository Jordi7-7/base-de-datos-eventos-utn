--- CREACION DE TABLAS NUEVAS ------

--- Tabla para eventos ---
CREATE TABLE "UEP_TAB_ACTIVIDADES" (
  "ACTIVIDAD_ID" NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  "ID_EVENTO" NUMBER,
  "NOMBRE_ACTIVIDAD" VARCHAR2(200),
  "DESCRIPCION" VARCHAR2(500),
  "LUGAR" VARCHAR2(200),
  "IMAGEN_ACTIVIDAD" BLOB,
  "IMAGEN_ACTIVIDAD_MIMETYPE"  VARCHAR2(500),
  "IMAGEN_ACTIVIDAD_FILENAME"  VARCHAR2(500),
  "FECHA_INICIO" DATE,
  "FECHA_FIN" DATE,
  "FECHA_MAX_INSCRIPCION" DATE,
  "LIMITE_PARTICIPANTES" NUMBER,
  "AUTOINSCRIPCION" CHAR(1) CHECK (AUTOINSCRIPCION IN ('S', 'N')),
  "TIPO_ACTIVIDAD" NUMBER,
  "NUMERO_CONTROLES" NUMBER(1) DEFAULT 1 CHECK (NUMERO_CONTROLES IN (1, 2, 3)),
  "PUBLICADO" CHAR(1) CHECK (PUBLICADO IN ('S', 'N')),
  "ESTADO" CHAR(1)
);


--- Tabla para tipos de actividades ---
CREATE TABLE "UEP_TAB_TIPOS_ACTIVIDAD" (
  "TIPO_ACTIVIDAD_ID" NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  "NOMBRE_TIPO_ACTIVIDAD" VARCHAR2(200),
  "DESCRIPCION_TIPO_ACTIVIDAD" VARCHAR2(500)
);


--- Tabla para registrar la asistencia a actividades ---
CREATE TABLE UEP_TAB_ACTIVIDAD_ASISTENCIA (
  "ACTIVIDAD_ASISTENCIA_ID" NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  "USUARIO_CEDULA"           VARCHAR2(20) NOT NULL,
  "ACTIVIDAD_ID"             NUMBER NOT NULL,
  "FECHA_INSCRIPCION"        DATE DEFAULT SYSDATE,
  "FECHA_ASISTENCIA"         DATE,
  "FECHA_BREAK"              DATE,
  "FECHA_SALIDA"             DATE,
  "USUARIO_REGISTRO_CEDULA"  VARCHAR2(20),
  "USUARIO_SALIDA_CEDULA"  VARCHAR2(20),
  "USUARIO_BREAK_CEDULA" VARCHAR2(20),
  "CODIGO_QR"                VARCHAR2(200),
  "ESTADO"                   CHAR(1) DEFAULT 'A' CHECK (ESTADO IN ('A', 'I')),
  "ASISTENCIA_REGISTRADA" CHAR(1) DEFAULT 'N' CHECK (ASISTENCIA_REGISTRADA IN ('S', 'N')),
  "SALIDA_REGISTRADA" CHAR(1) DEFAULT 'N' CHECK (SALIDA_REGISTRADA IN ('S', 'N')),
  "BREAK_REGISTRADA"     CHAR(1) DEFAULT 'N' CHECK (BREAK_REGISTRADA IN ('S', 'N'))
);

ALTER TABLE "UEP_TAB_ACTIVIDADES" ADD FOREIGN KEY ("ID_EVENTO") REFERENCES "UEP_TAB_EVENTOS" ("ID_EVENTO");
ALTER TABLE "UEP_TAB_ACTIVIDADES" ADD FOREIGN KEY ("TIPO_ACTIVIDAD") REFERENCES "UEP_TAB_TIPOS_ACTIVIDAD" ("TIPO_ACTIVIDAD_ID");

ALTER TABLE "UEP_TAB_ACTIVIDAD_ASISTENCIA" ADD FOREIGN KEY ("ACTIVIDAD_ID") REFERENCES "UEP_TAB_ACTIVIDADES" ("ACTIVIDAD_ID");

--- Tabla para organizadores de eventos ---
CREATE TABLE UEP_TAB_ORGANIZADORES (
    ID_ORGANIZADOR NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,             -- El identificador del organizador
    NOMBRE_ORGANIZADOR VARCHAR2(500) NOT NULL,  -- El nombre del organizador
    INSTITUCION_CODIGO VARCHAR2(500),  -- El código de la institución (ahora VARCHAR2 500 bytes)
    BANCO VARCHAR2(500) NOT NULL,               -- El nombre del banco (VARCHAR2 500 bytes)
    NOMBRE_TITULAR_CUENTA VARCHAR2(500) NOT NULL, -- Nombre del titular de la cuenta (VARCHAR2 500 bytes)
    TIPO_CUENTA CHAR(2) NOT NULL,               -- El tipo de cuenta (CHAR 2 bytes)
    OBSERVACION VARCHAR2(1000),        -- Observaciones adicionales
    NUMERO_CUENTA VARCHAR2(500) NOT NULL        -- Número de cuenta (VARCHAR2 500 bytes)
);


--- Tabla para asignar roles a usuarios en eventos específicos
CREATE TABLE UEP_TAB_USU_ROL_EVENTO (
  NOMBRE_ROL     VARCHAR2(100) NOT NULL,
  USU_CUENTA     VARCHAR2(20)  NOT NULL,
  ID_EVENTO      NUMBER        NOT NULL,
  ESTADO         CHAR(1)       DEFAULT 'A' NOT NULL,

  -- Clave primaria compuesta
  CONSTRAINT PK_USUARIOS_ROLES PRIMARY KEY (NOMBRE_ROL, USU_CUENTA, ID_EVENTO),

  -- Clave foránea al catálogo de roles
  CONSTRAINT FK_ROL_USUARIOS_ROLES
    FOREIGN KEY (NOMBRE_ROL)
    REFERENCES SEG_TAB_ROLES (NOMBRE_ROL),

  -- Clave foránea al catálogo de usuarios
  CONSTRAINT FK_USUARIO_USUARIOS_ROLES
    FOREIGN KEY (USU_CUENTA)
    REFERENCES INS_TAB_USUARIOS (CUENTA),

  -- Clave foránea a la tabla de eventos
  CONSTRAINT FK_EVENTO_USUARIOS_ROLES
    FOREIGN KEY (ID_EVENTO)
    REFERENCES UEP_TAB_EVENTOS (ID_EVENTO),

  -- Restricción de validación del estado
  CONSTRAINT CHK_ESTADO_USUARIOS_ROLES
    CHECK (ESTADO IN ('A', 'I'))
);






--- INSERCION DE DATOS INICIALES ------

--- Inserción de roles específicos para eventos ---
INSERT INTO SEG_TAB_ROLES (
  NOMBRE_ROL,
  DESCRIPCION,
  ESTADO_ROL,
  NOM_NOMBRE_ROL,
  PORDEFECTO,
  MESA_SERVICIOS
) VALUES (
  'REGISTRADOR_EVENTOS',
  'REGISTRADOR DE LA TOMA DE ASISTENCIA EN EVENTOS',
  'S',
  NULL,
  'N',
  'S'
);

INSERT INTO SEG_TAB_ROLES (
  NOMBRE_ROL,
  DESCRIPCION,
  ESTADO_ROL,
  NOM_NOMBRE_ROL,
  PORDEFECTO,
  MESA_SERVICIOS
) VALUES (
  'ADMINISTRADOR_EVENTOS',
  'ADMINISTRADOR DE EVENTOS',
  'S',
  NULL,
  'N',
  'S'
);

INSERT INTO SEG_TAB_ROLES (
  NOMBRE_ROL,
  DESCRIPCION,
  ESTADO_ROL,
  NOM_NOMBRE_ROL,
  PORDEFECTO,
  MESA_SERVICIOS
) VALUES (
  'VALIDADOR_EVENTOS',
  'VALIDADOR DE PAGOS DE EVENTOS',
  'S',
  NULL,
  'N',
  'S'
);

INSERT INTO SEG_TAB_ROLES (
  NOMBRE_ROL,
  DESCRIPCION,
  ESTADO_ROL,
  NOM_NOMBRE_ROL,
  PORDEFECTO,
  MESA_SERVICIOS
) VALUES (
  'ADMIN_DDTI_EVENTOS',
  'ADMIN DDTI DE EVENTOS',
  'S',
  NULL,
  'N',
  'S'
);

--- UPDATES DE TABLAS EXISTENTES ------

ALTER TABLE UEP_TAB_EVENTOS
ADD (
    ID_ORGANIZADOR INT, -- Se permite que la columna sea NULL temporalmente
    LINK_WEB_EVENTO VARCHAR2(500)
);  

ALTER TABLE UEP_TAB_EVENTOS
ADD CONSTRAINT FK_ID_ORGANIZADOR
    FOREIGN KEY (ID_ORGANIZADOR) REFERENCES UEP_TAB_ORGANIZADORES(ID_ORGANIZADOR);

--- Modificación de la columna CODIGO_QR en la tabla UEP_TAB_EVENTOS_INSCRIPCIONES para aumentar su tamaño ---
ALTER TABLE UEP_TAB_EVENTOS_INSCRIPCIONES 
MODIFY CODIGO_QR VARCHAR2(200);